apiVersion: backstage.io/v1beta2
kind: Template
metadata:
  name: ethio-dev-api-gateway
  title: API Gateway
  description: Create an API gateway. This will be a subdomain in *.ethio.dev and is your api gateway to attach  serverless functions and routes
  tags:
    - gateway
    - subdomain
    - api
spec:
  owner: dev@ethio.dev
  type: resource
  parameters:
    - title: Configure your API Gateway
      required:
        - subdomain
        - owner
      properties:
        subdomain:
          title: Name
          type: string
          description: Unique name for the subdomain
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location  
      required:
        - repoUrl
      properties: 
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./gateway
        values:
          component_id: '{{ parameters.subdomain }}'
          description: '{{ parameters.subdomain }} API Gateway'
          destination: '{{ parseRepoUrl parameters.repoUrl }}'
          owner: '{{ parameters.owner }}'

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: '{{ parameters.subdomain }}.ethio.dev'
        repoUrl: '{{ parameters.repoUrl }}'

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: '{{ steps.publish.output.repoContentsUrl }}'
        catalogInfoPath: '/catalog-info.yaml'

    - id: create-subdomain
      name: Create Subdomain
      action: ethiodev:create-subdomain
      input:
        subdomain: '{{ parameters.subdomain }}'
        owner: '{{ parameters.owner }}'
